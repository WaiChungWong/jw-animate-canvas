{"version":3,"sources":["module/index.js","index.js"],"names":["AnimateCanvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeAnimation","_this2","_mount","animator","Animator","animate","add","timeDiff","element","getCanvasElement","context","getContext","width","height","_unmount","_this3","_this$props","rest","maintainPixelSize","onResize","contextType","objectWithoutProperties","react_default","a","createElement","assign","ref","c","canvas","Canvas","propTypes","PropTypes","bool","func","string","instanceOf","defaultProps","ExampleAnimateCanvas","x","secondInterval","state","FPS","actualFPS","pauseOnHidden","resumeOnShown","setState","clearRect","beginPath","arc","radius","Math","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","draw","setFPS","setResumeOnShown","setPauseOnHidden","start","pause","resume","_canvas$getCanvasElem","stop","_this$state","src_module","className","type","value","toFixed","disabled","onChange","e","target","checked","Component","Demo","status","a1","a2","_this4","src_ExampleAnimateCanvas","id","onClick","startHandler","pauseHandler","resumeHandler","stopHandler","render","src_Demo","document","getElementById"],"mappings":"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","file":"static/js/main.aca5916c.chunk.js","sourcesContent":["/*eslint no-unused-vars: [\"warn\", { \"ignoreRestSiblings\": true }]*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Canvas from \"jw-canvas\";\nimport Animator from \"jw-animator\";\n\nclass AnimateCanvas extends Canvas {\n  constructor(props) {\n    super(props);\n\n    this.removeAnimation = () => {};\n  }\n\n  componentDidMount() {\n    this._mount();\n\n    const { props } = this;\n    const { animator } = props;\n\n    this.animator = animator || new Animator();\n\n    if (props.animate) {\n      this.removeAnimation = this.animator.add(timeDiff => {\n        const element = this.getCanvasElement();\n        const context = this.getContext();\n        const { width, height } = element;\n\n        props.animate(context, width, height, timeDiff);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._unmount();\n\n    this.removeAnimation();\n  }\n\n  render() {\n    const {\n      maintainPixelSize,\n      onResize,\n      animator,\n      contextType,\n      animate,\n      ...rest\n    } = this.props;\n    return <canvas ref={c => (this.canvas = c)} {...rest} />;\n  }\n}\n\nAnimateCanvas.propTypes = {\n  maintainPixelSize: PropTypes.bool,\n  onResize: PropTypes.func,\n  contextType: PropTypes.string,\n  animator: PropTypes.instanceOf(Animator),\n  animate: PropTypes.func\n};\n\nAnimateCanvas.defaultProps = {\n  maintainPixelSize: true,\n  contextType: \"2d\"\n};\n\nexport default AnimateCanvas;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nimport AnimateCanvas from \"./module\";\n\nimport \"./style.css\";\n\nclass ExampleAnimateCanvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.x = 0;\n    this.secondInterval = 0;\n\n    this.state = {\n      FPS: 0,\n      actualFPS: 0,\n      pauseOnHidden: false,\n      resumeOnShown: false\n    };\n  }\n\n  componentDidMount() {\n    const { animator } = this.canvas;\n    const { FPS, actualFPS, pauseOnHidden, resumeOnShown } = animator;\n\n    this.setState({\n      FPS,\n      actualFPS,\n      pauseOnHidden,\n      resumeOnShown\n    });\n  }\n\n  draw() {\n    const { canvas } = this;\n    const context = canvas.getContext();\n    const element = canvas.getCanvasElement();\n    const { width, height } = element;\n\n    let radius = 40;\n\n    context.clearRect(0, 0, width, height);\n    context.beginPath();\n    context.arc(this.x, radius + 10, radius, 0, 2 * Math.PI, false);\n    context.fillStyle = \"green\";\n    context.fill();\n    context.lineWidth = 5;\n    context.strokeStyle = \"#003300\";\n    context.stroke();\n  }\n\n  animate(context, width, height, timeDiff) {\n    this.x = (this.x + timeDiff * 200) % width;\n    this.secondInterval += timeDiff;\n\n    if (this.secondInterval > 0.5) {\n      this.setState({ actualFPS: 1 / timeDiff });\n      this.secondInterval = 0;\n    }\n\n    this.draw();\n  }\n\n  setFPS(FPS) {\n    this.canvas.animator.setFPS(FPS);\n    this.setState({ FPS });\n  }\n\n  setResumeOnShown(resumeOnShown) {\n    this.canvas.animator.setResumeOnShown(resumeOnShown);\n    this.setState({ resumeOnShown });\n  }\n\n  setPauseOnHidden(pauseOnHidden) {\n    this.canvas.animator.setPauseOnHidden(pauseOnHidden);\n    this.setState({ pauseOnHidden });\n  }\n\n  start() {\n    this.canvas.animator.start();\n  }\n\n  pause() {\n    this.canvas.animator.pause();\n  }\n\n  resume() {\n    this.canvas.animator.resume();\n  }\n\n  stop() {\n    const { canvas } = this;\n    const { width, height } = canvas.getCanvasElement();\n\n    canvas.animator.stop();\n    this.x = 0;\n    canvas.getContext().clearRect(0, 0, width, height);\n  }\n\n  render() {\n    const { FPS, actualFPS, pauseOnHidden, resumeOnShown } = this.state;\n    return (\n      <div {...this.props}>\n        <AnimateCanvas\n          className=\"animation\"\n          ref={c => (this.canvas = c)}\n          animate={(context, width, height, timeDiff) =>\n            this.animate(context, width, height, timeDiff)\n          }\n          onResize={() => this.draw()}\n        />\n        <div className=\"settings\">\n          <div className=\"field\">\n            <label>Actual FPS: </label>\n            <input\n              type=\"number\"\n              value={actualFPS.toFixed(2)}\n              disabled={true}\n              onChange={() => {}}\n            />\n          </div>\n          <div className=\"field\">\n            <label>FPS: </label>\n            <input\n              type=\"number\"\n              value={FPS}\n              onChange={e => this.setFPS(e.target.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Pause on hidden: </label>\n            <input\n              type=\"checkbox\"\n              checked={pauseOnHidden}\n              onChange={e => this.setPauseOnHidden(e.target.checked)}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Resume on shown: </label>\n            <input\n              type=\"checkbox\"\n              checked={resumeOnShown}\n              onChange={e => this.setResumeOnShown(e.target.checked)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { status: \"STOPPED\" };\n  }\n\n  startHandler() {\n    this.a1.start();\n    this.a2.start();\n    this.setState({ status: \"PLAYING\" });\n  }\n\n  pauseHandler() {\n    this.a1.pause();\n    this.a2.pause();\n  }\n\n  resumeHandler() {\n    this.a1.resume();\n    this.a2.resume();\n  }\n\n  stopHandler() {\n    this.a1.stop();\n    this.a2.stop();\n  }\n\n  render() {\n    const { status } = this.state;\n\n    return (\n      <div>\n        <ExampleAnimateCanvas ref={a1 => (this.a1 = a1)} id=\"animator1\" />\n        <ExampleAnimateCanvas ref={a2 => (this.a2 = a2)} id=\"animator2\" />\n        <div id=\"controller\">\n          <button\n            id=\"start\"\n            onClick={() => this.startHandler()}\n            disabled={status !== \"STOPPED\"}\n          >\n            start\n          </button>\n          <button id=\"pause\" onClick={() => this.pauseHandler()}>\n            pause\n          </button>\n          <button id=\"resume\" onClick={() => this.resumeHandler()}>\n            resume\n          </button>\n          <button\n            id=\"stop\"\n            onClick={() => this.stopHandler()}\n            disabled={status === \"STOPPED\"}\n          >\n            stop\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}